"""Set up the product groups

Revision ID: 631dbccb3862
Revises: 44d2206a8109
Create Date: 2017-09-30 01:10:31.736908

"""

# revision identifiers, used by Alembic.
revision = '631dbccb3862'
down_revision = '44d2206a8109'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('capacity_max', sa.Integer(), nullable=True),
    sa.Column('capacity_used', sa.Integer(), nullable=True),
    sa.Column('discount_token', sa.String(), nullable=True),
    sa.Column('allow_check_in', sa.Boolean(), nullable=False),
    sa.Column('allow_badge_up', sa.Boolean(), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('is_transferable', sa.Boolean(), nullable=False),
    sa.Column('personal_limit', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['product_group.id'], name=op.f('fk_product_group_parent_id_product_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_group')),
    sa.UniqueConstraint('name', name=op.f('uq_product_group_name'))
    )
    op.create_table('product_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price_tier_id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('price_int', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['price_tier_id'], ['product_group.id'], name=op.f('fk_product_price_price_tier_id_product_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_price'))
    )
    op.create_table('product_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('purchaser_id', sa.Integer(), nullable=False),
    sa.Column('price_tier_id', sa.Integer(), nullable=False),
    sa.Column('price_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('refund_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('is_ticket', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_product_instance_owner_id_user')),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('fk_product_instance_payment_id_payment')),
    sa.ForeignKeyConstraint(['price_id'], ['product_price.id'], name=op.f('fk_product_instance_price_id_product_price')),
    sa.ForeignKeyConstraint(['price_tier_id'], ['product_group.id'], name=op.f('fk_product_instance_price_tier_id_product_group')),
    sa.ForeignKeyConstraint(['purchaser_id'], ['user.id'], name=op.f('fk_product_instance_purchaser_id_user')),
    sa.ForeignKeyConstraint(['refund_id'], ['refund.id'], name=op.f('fk_product_instance_refund_id_refund')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_instance'))
    )
    op.create_table('product_transfer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_instance_id', sa.Integer(), nullable=False),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], name=op.f('fk_product_transfer_from_user_id_user')),
    sa.ForeignKeyConstraint(['product_instance_id'], ['product_instance.id'], name=op.f('fk_product_transfer_product_instance_id_product_instance')),
    sa.ForeignKeyConstraint(['to_user_id'], ['user.id'], name=op.f('fk_product_transfer_to_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_transfer'))
    )
    op.drop_table('ticket_price')
    op.drop_table('ticket')
    op.drop_table('ticket_transfer')
    op.drop_table('ticket_attrib')
    op.drop_table('ticket_checkin_version')
    op.drop_table('ticket_type')
    op.drop_table('ticket_checkin')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ticket_checkin',
    sa.Column('ticket_id', sa.INTEGER(), nullable=False),
    sa.Column('checked_in', sa.BOOLEAN(), nullable=False),
    sa.Column('badged_up', sa.BOOLEAN(), nullable=False),
    sa.CheckConstraint('badged_up IN (0, 1)'),
    sa.CheckConstraint('checked_in IN (0, 1)'),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], name='fk_ticket_checkin_ticket_id_ticket'),
    sa.PrimaryKeyConstraint('ticket_id', name='pk_ticket_checkin')
    )
    op.create_table('ticket_type',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('order', sa.INTEGER(), nullable=False),
    sa.Column('admits', sa.VARCHAR(), nullable=False),
    sa.Column('type_limit', sa.INTEGER(), nullable=False),
    sa.Column('personal_limit', sa.INTEGER(), nullable=False),
    sa.Column('has_badge', sa.BOOLEAN(), nullable=False),
    sa.Column('is_transferable', sa.BOOLEAN(), nullable=False),
    sa.Column('expires', sa.DATETIME(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('discount_token', sa.VARCHAR(), nullable=True),
    sa.Column('fixed_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('has_badge IN (0, 1)'),
    sa.CheckConstraint('is_transferable IN (0, 1)'),
    sa.PrimaryKeyConstraint('id', name='pk_ticket_type'),
    sa.UniqueConstraint('fixed_id', name='uq_ticket_type_fixed_id')
    )
    op.create_table('ticket_checkin_version',
    sa.Column('ticket_id', sa.INTEGER(), nullable=False),
    sa.Column('checked_in', sa.BOOLEAN(), nullable=True),
    sa.Column('badged_up', sa.BOOLEAN(), nullable=True),
    sa.Column('transaction_id', sa.INTEGER(), nullable=False),
    sa.Column('operation_type', sa.SMALLINT(), nullable=False),
    sa.CheckConstraint('badged_up IN (0, 1)', name='ck_ticket_checkin_version_badged_up'),
    sa.CheckConstraint('checked_in IN (0, 1)', name='ck_ticket_checkin_version_checked_in'),
    sa.PrimaryKeyConstraint('ticket_id', 'transaction_id', name='pk_ticket_checkin_version')
    )
    op.create_table('ticket_attrib',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ticket_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('value', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], name='fk_ticket_attrib_ticket_id_ticket'),
    sa.PrimaryKeyConstraint('id', name='pk_ticket_attrib')
    )
    op.create_table('ticket_transfer',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ticket_id', sa.INTEGER(), nullable=False),
    sa.Column('to_user_id', sa.INTEGER(), nullable=False),
    sa.Column('from_user_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], name='fk_ticket_transfer_from_user_id_user'),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], name='fk_ticket_transfer_ticket_id_ticket'),
    sa.ForeignKeyConstraint(['to_user_id'], ['user.id'], name='fk_ticket_transfer_to_user_id_user'),
    sa.PrimaryKeyConstraint('id', name='pk_ticket_transfer')
    )
    op.create_table('ticket',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('type_id', sa.INTEGER(), nullable=False),
    sa.Column('paid', sa.BOOLEAN(), nullable=False),
    sa.Column('expires', sa.DATETIME(), nullable=False),
    sa.Column('emailed', sa.BOOLEAN(), nullable=False),
    sa.Column('payment_id', sa.INTEGER(), nullable=True),
    sa.Column('refund_id', sa.INTEGER(), nullable=True),
    sa.Column('transfer_reminder_sent', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.CheckConstraint('emailed IN (0, 1)'),
    sa.CheckConstraint('paid IN (0, 1)'),
    sa.CheckConstraint('transfer_reminder_sent IN (0, 1)'),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name='fk_ticket_payment_id_payment'),
    sa.ForeignKeyConstraint(['refund_id'], ['refund.id'], name='fk_ticket_refund_id_refund'),
    sa.ForeignKeyConstraint(['type_id'], ['ticket_type.id'], name='fk_ticket_type_id_ticket_type'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_ticket_user_id_user'),
    sa.PrimaryKeyConstraint('id', name='pk_ticket')
    )
    op.create_table('ticket_price',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.INTEGER(), nullable=False),
    sa.Column('currency', sa.VARCHAR(), nullable=False),
    sa.Column('price_int', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['code'], ['ticket_type.id'], name='fk_ticket_price_code_ticket_type'),
    sa.PrimaryKeyConstraint('id', name='pk_ticket_price')
    )
    op.drop_table('product_transfer')
    op.drop_table('product_instance')
    op.drop_table('product_price')
    op.drop_table('product_group')
    # ### end Alembic commands ###
